name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
      fail-fast: false

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Instalar Poetry
        run: |
          pip install poetry

      - name: Configurar cache de dependências Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Instalar dependências com Poetry
        run: |
          poetry install --no-root

      - name: Executar lint (flake8)
        run: |
          poetry run flake8 src tests

      - name: Executar testes (pytest)
        run: |
          poetry run pytest --cov=src
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PYTHONPATH: ${{ github.workspace }}/src

      # --- AJUSTE AQUI: Rodar pre-commit (opcional) ---
      - name: Rodar pre-commit
        run: |
          # Limpa o cache interno do pre-commit para forçar reinstalação das ferramentas
          rm -rf ~/.cache/pre-commit
          poetry run pre-commit run --all-files # Executa todos os hooks
        env: # pre-commit também pode precisar de PYTHONPATH
          PYTHONPATH: ${{ github.workspace }} # Adicione esta linha se Flake8 estiver reclamando
