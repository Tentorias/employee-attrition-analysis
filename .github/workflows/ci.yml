name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
      fail-fast: false

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Instalar Poetry
        run: |
          pip install poetry

      - name: Configurar cache de dependências Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Instalar dependências com Poetry
        run: |
          poetry install --no-root 

      - name: Executar lint (flake8)
        run: |
          poetry run flake8 src tests

      - name: Executar testes (pytest)
        run: |
          poetry run pytest --cov=src
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }} 
          PYTHONPATH: ${{ github.workspace }}/src 

      - name: Rodar pre-commit
        run: |
          rm -rf ~/.cache/pre-commit
          poetry run pre-commit install --install-hooks 
          poetry run pre-commit autoupdate 
          poetry run pre-commit run --all-files --show-diff-on-failure 
        env: 
          PYTHONPATH: ${{ github.workspace }} 

  # NOVO JOB: Deploy para Render (API e Streamlit)
  deploy:
    runs-on: ubuntu-latest
    needs: build # Este job só será executado se o job 'build' (CI) for bem-sucedido
    if: github.ref == 'refs/heads/main' # Só faz deploy no branch 'main'

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Disparar Deploy da API no Render
        run: |
          # Substitua 'YOUR_API_SERVICE_ID' pelo ID real do seu serviço Render da API
          API_SERVICE_ID="YOUR_API_SERVICE_ID" 
          curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
               "https://api.render.com/v1/services/${API_SERVICE_ID}/deploys"
          echo "✅ Deploy da API disparado para ${API_SERVICE_ID}"
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

      - name: Disparar Deploy do Streamlit no Render
        run: |
          # Substitua 'YOUR_STREAMLIT_SERVICE_ID' pelo ID real do seu serviço Render do Streamlit
          STREAMLIT_SERVICE_ID="YOUR_STREAMLIT_SERVICE_ID" 
          curl -X POST -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
               "https://api.render.com/v1/services/${STREAMLIT_SERVICE_ID}/deploys"
          echo "✅ Deploy do Streamlit disparado para ${STREAMLIT_SERVICE_ID}"
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}