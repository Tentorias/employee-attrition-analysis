name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
      fail-fast: false

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      # --- NOVO PASSO: Instalar Poetry ---
      - name: Instalar Poetry
        run: |
          pip install poetry

      # --- Ajustar Cache para Poetry ---
      - name: Configurar cache de dependências Poetry
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs # Caminho do cache do Poetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }} # Chave baseada no poetry.lock
          restore-keys: ${{ runner.os }}-poetry-

      # --- Ajustar Instalação de Dependências com Poetry ---
      - name: Instalar dependências com Poetry
        run: |
          poetry install --no-root --no-dev # Instala dependências do projeto.
                                           # --no-root: Não instala o pacote raiz (seu projeto)
                                           # --no-dev: Não instala dependências de desenvolvimento
                                           # Se seu projeto tiver dependências de dev importantes para o CI (ex: flake8, pytest),
                                           # use 'poetry install' sem flags ou 'poetry install --no-root'.

      # --- Ajustar Execução de Comandos com Poetry ---
      # Todos os comandos que usavam '. .venv/bin/activate' e 'pip install'
      # agora devem usar 'poetry run'
      - name: Executar lint (flake8)
        run: |
          poetry run flake8 src tests

      - name: Executar testes (pytest)
        run: |
          poetry run pytest --cov=src

      - name: Rodar pre-commit (opcional)
        run: |
          poetry run pre-commit run --all-files